<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.perfectial.study</groupId>
	<artifactId>cash-flow-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>cash-flow-service</name>
	<description>Cash flow project</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.BUILD-SNAPSHOT</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Finchley.BUILD-SNAPSHOT</spring-cloud.version>
		<jedis.version>2.9.0</jedis.version>

		<!--set this to your docker acct name-->
		<docker.image.prefix>bomel</docker.image.prefix>

		<!--Set to name of project-->
		<docker.image.name>cash-flow-service-docker</docker.image.name>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!--Redis-->
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>${jedis.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!--for mvn docker-->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.23.0</version>

				<configuration>

					<dockerHost>http://127.0.0.1:2375</dockerHost>
					<!--<dockerHost>unix:///var/run/docker.sock</dockerHost>-->

					<verbose>true</verbose>
					<images>
						<image>
							<name>${docker.image.prefix}/${docker.image.name}</name>
							<build>
								<dockerFileDir>${project.basedir}/target/dockerfile/</dockerFileDir>

								<!--copies artficact to docker build dir in target-->
								<assembly>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
								<tags>
									<tag>latest</tag>
									<tag>${project.version}</tag>
								</tags>
							</build>
							<run>
								<ports>
									<port>8080:8080</port>
								</ports>
								<links>
									<link>myrabbitmq:rabbitmq</link>
								</links>
								<env>
									<SPRING_RABBITMQ_HOST>rabbitmq</SPRING_RABBITMQ_HOST>
								</env>
								<dependsOn>
									<container>myrabbitmq</container>
									<container>pageviewservice</container>
								</dependsOn>
							</run>
						</image>
						<!--mysql container-->
						<image>
							<name>mysql</name>
							<alias>mysqldb</alias>
							<run>
								<!--expose port for dn-->
								<ports>
									<port>3306:3306</port>
								</ports>
								<!--set env prams for mysql image-->
								<env>
									<MYSQL_DATABASE>pageviewservice</MYSQL_DATABASE>
									<MYSQL_ALLOW_EMPTY_PASSWORD>yes</MYSQL_ALLOW_EMPTY_PASSWORD>
								</env>
								<!--wait for db to start-->
								<wait>
									<time>10000</time>
								</wait>
							</run>
						</image>
						<!--rabbit container-->
						<image>
							<name>rabbitmq</name>
							<alias>myrabbitmq</alias>
							<run>
								<ports>
									<port>5671</port>
									<port>5672</port>
									<port>4369</port>
									<port>25672</port>
								</ports>
								<!--wait for db to start-->
								<wait>
									<time>10000</time>
								</wait>
							</run>
						</image>

						<!--docker run &#45;&#45;name pageviewservice -p 8081:8081 &#45;&#45;link rabbitmq:rabbitmq &#45;&#45;link mysqldb:mysqldb-->
						<!-- -e SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/pageviewservice -e SPRING_PROFILES_ACTIVE=mysql-->
						<!-- -e SPRING_RABBITMQ_HOST=rabbitmq springframeworkguru/pageviewservice-->
						<image>
							<name>springframeworkguru/pageviewservice</name>
							<alias>pageviewservice</alias>
							<run>
								<ports>
									<port>8081:8081</port>
								</ports>
								<links>
									<link>myrabbitmq:rabbitmq</link>
									<link>mysqldb:mysqldb</link>
								</links>
								<env>
									<SPRING_DATASOURCE_URL>jdbc:mysql://mysqldb:3306/pageviewservice</SPRING_DATASOURCE_URL>
									<SPRING_PROFILES_ACTIVE>mysql</SPRING_PROFILES_ACTIVE>
									<SPRING_RABBITMQ_HOST>rabbitmq</SPRING_RABBITMQ_HOST>
								</env>
								<dependsOn>
									<container>myrabbitmq</container>
									<container>mysql</container>
								</dependsOn>
								<wait>
									<http>
										<url>http://localhost:8081/health</url>
										<method>GET</method>
										<status>200..399</status>
									</http>
									<time>75000</time>
								</wait>
							</run>
						</image>
					</images>
				</configuration>
			</plugin>

			<!--For groovy: this plugin will build docker file fDockerfilelate-->
			<plugin>
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>execute</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<scripts>
						<script>file:///${project.basedir}/src/main/scripts/BuildDockerfile.groovy</script>
					</scripts>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-all</artifactId>
						<!-- any version of Groovy \>= 1.5.0 should work here -->
						<version>2.4.8</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>


</project>
